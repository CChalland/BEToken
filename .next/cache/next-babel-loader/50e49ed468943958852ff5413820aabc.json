{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/colechalland/Projects/BEToken/pages/index.js\";\n//import \"semantic-ui-css/semantic.min.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button } from \"semantic-ui-react\";\n\nvar BetokenIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BetokenIndex, _Component);\n\n  function BetokenIndex() {\n    _classCallCheck(this, BetokenIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BetokenIndex).apply(this, arguments));\n  }\n\n  _createClass(BetokenIndex, [{\n    key: \"renderCurrentBets\",\n    value: function renderCurrentBets() {\n      var items = this.props.pendingTransactions.map(function (bet) {\n        return {\n          header: bet.amount,\n          description: React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"View Bet\"),\n          fluid: true\n        };\n      });\n      return React.createElement(Card.Group, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.rendCurrentBets());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var getNode1, response, blockchain, today, sportsByDate;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                getNode1 = \"http://localhost:3001/blockchain\";\n                _context.next = 3;\n                return axios.get(getNode1);\n\n              case 3:\n                response = _context.sent;\n                blockchain = response.data;\n                console.log(blockchain);\n                today = new Date().toJSON().slice(0, 10);\n                _context.next = 9;\n                return axios({\n                  method: \"GET\",\n                  url: \"https://therundown-therundown-v1.p.rapidapi.com/sports/3/events/\".concat(today),\n                  headers: {\n                    \"x-rapidapi-host\": \"therundown-therundown-v1.p.rapidapi.com\",\n                    \"x-rapidapi-key\": process.env.THERUNDOWN_API_KEY\n                  },\n                  params: {\n                    include: [\"all_periods\", \"scores\"],\n                    offset: \"0\"\n                  }\n                });\n\n              case 9:\n                response = _context.sent;\n                sportsByDate = response.data;\n                console.log(sportsByDate);\n                return _context.abrupt(\"return\", {\n                  blockchain: blockchain,\n                  sportsByDate: sportsByDate\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return BetokenIndex;\n}(Component);\n\nexport default BetokenIndex;","map":{"version":3,"sources":["/Users/colechalland/Projects/BEToken/pages/index.js"],"names":["React","Component","axios","Card","Button","BetokenIndex","items","props","pendingTransactions","map","bet","header","amount","description","fluid","rendCurrentBets","getNode1","get","response","blockchain","data","console","log","today","Date","toJSON","slice","method","url","headers","process","env","THERUNDOWN_API_KEY","params","include","offset","sportsByDate"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;;IAEMC,Y;;;;;;;;;;;;;wCA4BgB;AAClB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,mBAAX,CAA+BC,GAA/B,CAAmC,UAAAC,GAAG,EAAI;AACtD,eAAO;AACLC,UAAAA,MAAM,EAAED,GAAG,CAACE,MADP;AAELC,UAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANa,CAAd;AAQA,aAAO,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAER,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BAEQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKS,eAAL,EAAN,CAAP;AACD;;;;;;;;;;;;AAxCOC,gBAAAA,Q;;uBACed,KAAK,CAACe,GAAN,CAAUD,QAAV,C;;;AAAjBE,gBAAAA,Q;AACEC,gBAAAA,U,GAAaD,QAAQ,CAACE,I;AAE5BC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEII,gBAAAA,K,GAAQ,IAAIC,IAAJ,GAAWC,MAAX,GAAoBC,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,C;;uBACKxB,KAAK,CAAC;AACrByB,kBAAAA,MAAM,EAAE,KADa;AAErBC,kBAAAA,GAAG,4EAAqEL,KAArE,CAFkB;AAGrBM,kBAAAA,OAAO,EAAE;AACP,uCAAmB,yCADZ;AAEP,sCAAkBC,OAAO,CAACC,GAAR,CAAYC;AAFvB,mBAHY;AAOrBC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,OAAO,EAAE,CAAC,aAAD,EAAgB,QAAhB,CADH;AAENC,oBAAAA,MAAM,EAAE;AAFF;AAPa,iBAAD,C;;;AAAtBjB,gBAAAA,Q;AAYIkB,gBAAAA,Y,GAAelB,QAAQ,CAACE,I;AAE5BC,gBAAAA,OAAO,CAACC,GAAR,CAAYc,YAAZ;iDAEO;AAAEjB,kBAAAA,UAAU,EAAVA,UAAF;AAAciB,kBAAAA,YAAY,EAAZA;AAAd,iB;;;;;;;;;;;;;;;;;;;EAzBgBnC,S;;AA6C3B,eAAeI,YAAf","sourcesContent":["//import \"semantic-ui-css/semantic.min.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button } from \"semantic-ui-react\";\n\nclass BetokenIndex extends Component {\n  static async getInitialProps() {\n    const getNode1 = `http://localhost:3001/blockchain`;\n    let response = await axios.get(getNode1);\n    const blockchain = response.data;\n\n    console.log(blockchain);\n\n    let today = new Date().toJSON().slice(0, 10);\n    response = await axios({\n      method: \"GET\",\n      url: `https://therundown-therundown-v1.p.rapidapi.com/sports/3/events/${today}`,\n      headers: {\n        \"x-rapidapi-host\": \"therundown-therundown-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.THERUNDOWN_API_KEY\n      },\n      params: {\n        include: [\"all_periods\", \"scores\"],\n        offset: \"0\"\n      }\n    });\n    let sportsByDate = response.data;\n\n    console.log(sportsByDate);\n\n    return { blockchain, sportsByDate };\n  }\n\n  renderCurrentBets() {\n    const items = this.props.pendingTransactions.map(bet => {\n      return {\n        header: bet.amount,\n        description: <a>View Bet</a>,\n        fluid: true\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return <div>{this.rendCurrentBets()}</div>;\n  }\n}\n\nexport default BetokenIndex;\n"]},"metadata":{},"sourceType":"module"}